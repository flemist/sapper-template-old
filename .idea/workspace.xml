<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="PropertiesComponent">
  <property name="restartRequiresConfirmation" value="false" />
    <property name="javascript.karma.karma_node_package_dir" value="" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/karma.conf.performance.js" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.standard" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="$Node2$/node" />
    <property name="node.js.path.for.package.standard" value="$Node2$/node" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="$PROJECT_DIR$/node_modules/eslint" />
    <property name="node.js.selected.package.standard" value="$PROJECT_DIR$/node_modules/eslint" />
    <property name="node.js.selected.package.tslint" value="" />
    <property name="nodejs.cucumber.cucumber_node_package_dir" value="" />
    <property name="nodejs.mocha.mocha_node_package_dir" value="$PROJECT_DIR$/node_modules/mocha" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="watcher.settings" />
      </component>
  <component name="RunManager" selected="npm.Sapper: dev">
    <configuration default="true" type="JavaScriptTestRunnerKarma">
      <config-file value="$PROJECT_DIR$/karma.conf.performance.js" />
      <karma-package-dir value="$PROJECT_DIR$/node_modules/karma" />
      <node-interpreter value="$Node2$/node" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration default="true" type="NodeJSConfigurationType" path-to-node="$Node2$/node" node-parameters="--max-old-space-size=4096" working-dir="$PROJECT_DIR$">
      <method v="2" />
    </configuration>
    <configuration name="Sapper: dev" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="$Node2$/node" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration default="true" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts />
      <node-interpreter value="$Node2$/node" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration default="true" type="mocha-javascript-test-runner">
      <node-interpreter>$Node2$/node</node-interpreter>
      <node-options>--max-old-space-size=4096</node-options>
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>-r ./babel-register --exclude **/src/** --watch --watch-extensions  js){100}|^(((?!([\\/](dist|tmp|node_modules|reports|\.[^\\/]*)[\\/]|\.(log|bak)$)).)*</extra-mocha-options>
      <test-kind>DIRECTORY</test-kind>
      <test-directory>$PROJECT_DIR$/test</test-directory>
      <recursive>true</recursive>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Mocha.Coverage Mocha" />
      <item itemvalue="Mocha.Watch Mocha" />
    <item itemvalue="npm.Sapper: dev" />
    </list>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  
</project>